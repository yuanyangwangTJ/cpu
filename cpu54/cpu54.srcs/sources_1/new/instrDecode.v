// instrDecode.v

module InstrDecode(
	input [31:0] instr_raw,
	output reg [53:0] instr_code
    );

	always @(*) begin
		casex ({instr_raw[31:26], instr_raw[5:0]})
            12'b000000_100000 : instr_code <= 54'b000000000000000000000000000000000000000000000000000001; // add
            12'b000000_100001 : instr_code <= 54'b000000000000000000000000000000000000000000000000000010; // addu
            12'b000000_100010 : instr_code <= 54'b000000000000000000000000000000000000000000000000000100; // sub
            12'b000000_100011 : instr_code <= 54'b000000000000000000000000000000000000000000000000001000; // subu
            12'b000000_100100 : instr_code <= 54'b000000000000000000000000000000000000000000000000010000; // and
            12'b000000_100101 : instr_code <= 54'b000000000000000000000000000000000000000000000000100000; // or
            12'b000000_100110 : instr_code <= 54'b000000000000000000000000000000000000000000000001000000; // xor
            12'b000000_100111 : instr_code <= 54'b000000000000000000000000000000000000000000000010000000; // nor
            12'b000000_101010 : instr_code <= 54'b000000000000000000000000000000000000000000000100000000; // slt
            12'b000000_101011 : instr_code <= 54'b000000000000000000000000000000000000000000001000000000; // sltu
            12'b000000_000000 : instr_code <= 54'b000000000000000000000000000000000000000000010000000000; // sll
            12'b000000_000010 : instr_code <= 54'b000000000000000000000000000000000000000000100000000000; // srl
            12'b000000_000011 : instr_code <= 54'b000000000000000000000000000000000000000001000000000000; // sra
            12'b000000_000100 : instr_code <= 54'b000000000000000000000000000000000000000010000000000000; // sllv
            12'b000000_000110 : instr_code <= 54'b000000000000000000000000000000000000000100000000000000; // srlv
            12'b000000_000111 : instr_code <= 54'b000000000000000000000000000000000000001000000000000000; // srav
            12'b000000_001000 : instr_code <= 54'b000000000000000000000000000000000000010000000000000000; // jr
            12'b001000_?????? : instr_code <= 54'b000000000000000000000000000000000000100000000000000000; // addi
            12'b001001_?????? : instr_code <= 54'b000000000000000000000000000000000001000000000000000000; // addiu
            12'b001100_?????? : instr_code <= 54'b000000000000000000000000000000000010000000000000000000; // andi
            12'b001101_?????? : instr_code <= 54'b000000000000000000000000000000000100000000000000000000; // ori
            12'b001110_?????? : instr_code <= 54'b000000000000000000000000000000001000000000000000000000; // xori
            12'b100011_?????? : instr_code <= 54'b000000000000000000000000000000010000000000000000000000; // lw
            12'b101011_?????? : instr_code <= 54'b000000000000000000000000000000100000000000000000000000; // sw
            12'b000100_?????? : instr_code <= 54'b000000000000000000000000000001000000000000000000000000; // beq
            12'b000101_?????? : instr_code <= 54'b000000000000000000000000000010000000000000000000000000; // bne
            12'b001010_?????? : instr_code <= 54'b000000000000000000000000000100000000000000000000000000; // slti
            12'b001011_?????? : instr_code <= 54'b000000000000000000000000001000000000000000000000000000; // sltiu
            12'b001111_?????? : instr_code <= 54'b000000000000000000000000010000000000000000000000000000; // lui
            12'b000010_?????? : instr_code <= 54'b000000000000000000000000100000000000000000000000000000; // j
            12'b000011_?????? : instr_code <= 54'b000000000000000000000001000000000000000000000000000000; // jal
            12'b011100_100000 : instr_code <= 54'b000000000000000000000010000000000000000000000000000000; // clz
            12'b000000_011010 : instr_code <= 54'b000000000000000000000100000000000000000000000000000000; // div
            12'b000000_011011 : instr_code <= 54'b000000000000000000001000000000000000000000000000000000; // divu
            12'b011100_000010 : instr_code <= 54'b000000000000000000010000000000000000000000000000000000; // mul
            12'b000000_011001 : instr_code <= 54'b000000000000000000100000000000000000000000000000000000; // multu
            12'b010000_011000 : instr_code <= 54'b000000000000000001000000000000000000000000000000000000; // eret
            12'b000000_001001 : instr_code <= 54'b000000000000000010000000000000000000000000000000000000; // jalr
            12'b100000_?????? : instr_code <= 54'b000000000000000100000000000000000000000000000000000000; // lb
            12'b100100_?????? : instr_code <= 54'b000000000000001000000000000000000000000000000000000000; // lbu
            12'b100101_?????? : instr_code <= 54'b000000000000010000000000000000000000000000000000000000; // lhu
            12'b101000_?????? : instr_code <= 54'b000000000000100000000000000000000000000000000000000000; // sb
            12'b101001_?????? : instr_code <= 54'b000000000001000000000000000000000000000000000000000000; // sh
            12'b100001_?????? : instr_code <= 54'b000000000010000000000000000000000000000000000000000000; // lh
            12'b010000_000000 : instr_code <= 54'b000000000100000000000000000000000000000000000000000000; // mfc0
            12'b000000_010000 : instr_code <= 54'b000000001000000000000000000000000000000000000000000000; // mfhi
            12'b000000_010010 : instr_code <= 54'b000000010000000000000000000000000000000000000000000000; // mflo
            12'b010000_000000 : instr_code <= 54'b000000100000000000000000000000000000000000000000000000; // mtc0
            12'b000000_010001 : instr_code <= 54'b000001000000000000000000000000000000000000000000000000; // mthi
            12'b000000_010011 : instr_code <= 54'b000010000000000000000000000000000000000000000000000000; // mtlo
            12'b000000_001100 : instr_code <= 54'b000100000000000000000000000000000000000000000000000000; // syscall
            12'b000000_110100 : instr_code <= 54'b001000000000000000000000000000000000000000000000000000; // teq
            12'b000001_?????? : instr_code <= 54'b010000000000000000000000000000000000000000000000000000; // bgez
            12'b000000_001101 : instr_code <= 54'b100000000000000000000000000000000000000000000000000000; // break
            default:            instr_code <= 54'bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz; // ERROR
        endcase
            casex ({instr_raw[31:21], instr_raw[5:0]})
            17'b01000000100_000000 : instr_code <= 54'b000000100000000000000000000000000000000000000000000000; // mtc0
            endcase
	end

endmodule
